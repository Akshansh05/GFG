class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        
        boolean vis[] = new boolean[V];
        boolean rec[] = new boolean[V];
        
        for(int i=0;i<V;i++){
            vis[i]=false;
            rec[i]=false;
        }
        
           for(int i=0;i<V;i++){
                if(!vis[i]){
                    if(checkCyclic(V,adj,i,vis,rec))
                    return true;
                }
        }
        
        return false;
    }
    
    public boolean checkCyclic(int V, ArrayList<ArrayList<Integer>> adj,int src,boolean vis[],boolean rec[]){
        
        vis[src] = true;
        rec[src] = true;
        
        for(int i:adj.get(src)){
            
            if(!vis[i]){
                if(checkCyclic(V,adj,i,vis,rec))
                    return true;
            }else if(rec[i]){
                return true;
            }
        }
            rec[src]=false;
        return false;
    }
}
