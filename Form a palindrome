import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)throws IOException
	 {
	 //code
	BufferedReader br = new BufferedReader(new
        InputStreamReader(System.in));
	 int t=Integer.parseInt(br.readLine());
	 while(t-->0){
	    String s=br.readLine();
	    int n = s.length();
	    String rev ="";
	    for(int i=n-1;i>=0;i--){
	        rev+=s.charAt(i);
	    }
	    int dp[][] =  new int[n+1][n+1];
	    
	    //longest palindromic subsequence
	 for(int i=1;i<=n;i++){
	     for(int j=1;j<=n;j++){
	         if(s.charAt(i-1) == rev.charAt(j-1))
	            dp[i][j] = 1+dp[i-1][j-1];
	        else
	        dp[i][j] = Math.max(dp[i][j-1],dp[i-1][j]);
	     }
	 }
	 System.out.println(n-dp[n][n]);//char to be removed
}
}
}
