class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
    List<List<Integer>> ans = new ArrayList<>();
    List<Integer>ds = new  ArrayList<>();
    Arrays.sort(candidates);//lexiorder is required 
        help(candidates,0,target,ds,ans);
    return ans;
    }

    void help(int[] candidates,int cIndex, int target,List<Integer>ds, List<List<Integer>> ans){

        if(target ==0){
            ans.add(new ArrayList<>(ds));
            return;
        }

        for(int i =cIndex ;i< candidates.length;i++){
                if(candidates[i]>target)
                 break;
                if(i > cIndex && candidates[i]==candidates[i-1])
                 continue;
                ds.add(candidates[i]);
                help(candidates,i+1,target-candidates[i],ds,ans);
                ds.remove(ds.size()-1);
        }
    }
}
